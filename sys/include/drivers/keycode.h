#ifndef KEYCODE_H
#define KEYCODE_H

#define K_DO_SELF	0
#define K_DO_FN		1
#define K_DO_MOD	2
#define K_DO_NONE	3
/*
 * These are abitrary, they can be thought of as the location of a key, rather than
 * the key itself. For example, a user of an US qwerty keyboard expects the character 's' to
 * be types when they press the key that is at 'KEY_S'. In the keymap, it could be mapped
 * 'o', or anything else.
 */
enum keycode_raw {
	KEY_RAW_NONE,
	KEY_RAW_ESC,
	KEY_RAW_F1,
	KEY_RAW_F2,
	KEY_RAW_F3,
	KEY_RAW_F4,
	KEY_RAW_F5,
	KEY_RAW_F6,
	KEY_RAW_F7,
	KEY_RAW_F8,
	KEY_RAW_F9,
	KEY_RAW_F10,
	KEY_RAW_F11,
	KEY_RAW_F12,
	KEY_RAW_PRINT_SCREEN,
	KEY_RAW_SCROLL_LOCK,
	KEY_RAW_PAUSE_BREAK,
	KEY_RAW_BACK_TICK,
	KEY_RAW_1,
	KEY_RAW_2,
	KEY_RAW_3,
	KEY_RAW_4,
	KEY_RAW_5,
	KEY_RAW_6,
	KEY_RAW_7,
	KEY_RAW_8,
	KEY_RAW_9,
	KEY_RAW_0,
	KEY_RAW_MINUS,
	KEY_RAW_EQUALS,
	KEY_RAW_BACKSPACE,
	KEY_RAW_INSERT,
	KEY_RAW_HOME,
	KEY_RAW_PAGE_UP,
	KEY_RAW_TAB,
	KEY_RAW_Q,
	KEY_RAW_W,
	KEY_RAW_E,
	KEY_RAW_R,
	KEY_RAW_T,
	KEY_RAW_Y,
	KEY_RAW_U,
	KEY_RAW_I,
	KEY_RAW_O,
	KEY_RAW_P,
	KEY_RAW_LSQR_BRACKET,
	KEY_RAW_RSQR_BRACKET,
	KEY_RAW_BACKSLASH,
	KEY_RAW_DELETE,
	KEY_RAW_END,
	KEY_RAW_PAGE_DOWN,
	KEY_RAW_CAPS_LOCK,
	KEY_RAW_A,
	KEY_RAW_S,
	KEY_RAW_D,
	KEY_RAW_F,
	KEY_RAW_G,
	KEY_RAW_H,
	KEY_RAW_J,
	KEY_RAW_K,
	KEY_RAW_L,
	KEY_RAW_SEMI_COLON,
	KEY_RAW_QUOTE,
	KEY_RAW_ENTER,
	KEY_RAW_LSHIFT,
	KEY_RAW_Z,
	KEY_RAW_X,
	KEY_RAW_C,
	KEY_RAW_V,
	KEY_RAW_B,
	KEY_RAW_N,
	KEY_RAW_M,
	KEY_RAW_COMMA,
	KEY_RAW_DOT,
	KEY_RAW_SLASH,
	KEY_RAW_RSHIFT,
	KEY_RAW_LCTRL,
	KEY_RAW_LSUPER,
	KEY_RAW_RSUPER,
	KEY_RAW_LALT,
	KEY_RAW_SPACE,
	KEY_RAW_RALT,
	KEY_RAW_RCTRL,
	KEY_RAW_ARROW_UP,
	KEY_RAW_ARROW_DOWN,
	KEY_RAW_ARROW_LEFT,
	KEY_RAW_ARROW_RIGHT,
	KEY_RAW_NUM_LOCK,
	KEY_RAW_PAD_SLASH,
	KEY_RAW_PAD_STAR,
	KEY_RAW_PAD_MINUS,
	KEY_RAW_PAD_7,
	KEY_RAW_PAD_8,
	KEY_RAW_PAD_9,
	KEY_RAW_PAD_4,
	KEY_RAW_PAD_5,
	KEY_RAW_PAD_6,
	KEY_RAW_PAD_1,
	KEY_RAW_PAD_2,
	KEY_RAW_PAD_3,
	KEY_RAW_PAD_PLUS,
	KEY_RAW_PAD_ENTER,
	KEY_RAW_PAD_0,
	KEY_RAW_PAD_DOT,
	/* 'MM' is for 'multimeda' */
	KEY_RAW_MM_PREVIOUS,
	KEY_RAW_MM_NEXT,
	KEY_RAW_MM_MUTE,
	KEY_RAW_MM_CALCULATOR,
	KEY_RAW_MM_PLAY,
	KEY_RAW_MM_STOP,
	KEY_RAW_MM_DOWN,
	KEY_RAW_MM_UP,
	KEY_RAW_MM_WWW_HOME,
	KEY_RAW_APPS,
	KEY_RAW_ACPI_POWER,
	KEY_RAW_ACPI_SLEEP,
	KEY_RAW_ACPI_WAKE,
	KEY_RAW_MM_WWW_SEARCH,
	KEY_RAW_MM_WWW_FAVORITES,
	KEY_RAW_MM_WWW_REFRESH,
	KEY_RAW_MM_WWW_STOP,
	KEY_RAW_MM_WWW_FORWARD,
	KEY_RAW_MM_WWW_BACK,
	KEY_RAW_MM_WWW_MY_COMP,
	KEY_RAW_MM_WWW_EMAIL,
	KEY_RAW_MM_WWW_MEDIA_SEL,
};

enum keycode {
	KEY_NONE = KEY_RAW_NONE | (K_DO_NONE << 8),
	KEY_ESC = KEY_RAW_ESC | (K_DO_SELF << 8),
       	KEY_F1 = KEY_RAW_F1 | (K_DO_FN << 8),
	KEY_F2 = KEY_RAW_F2 | (K_DO_FN << 8),
	KEY_F3 = KEY_RAW_F3 | (K_DO_FN << 8),
	KEY_F4 = KEY_RAW_F4 | (K_DO_FN << 8),
	KEY_F5 = KEY_RAW_F5 | (K_DO_FN << 8),
	KEY_F6 = KEY_RAW_F6 | (K_DO_FN << 8),
	KEY_F7 = KEY_RAW_F7 | (K_DO_FN << 8),
	KEY_F8 = KEY_RAW_F8 | (K_DO_FN << 8),
	KEY_F9 = KEY_RAW_F9 | (K_DO_FN << 8),
	KEY_F10 = KEY_RAW_F10 | (K_DO_FN << 8),
	KEY_F11 = KEY_RAW_F11 | (K_DO_FN << 8),
	KEY_F12 = KEY_RAW_F12 | (K_DO_FN << 8),
	KEY_PRINT_SCREEN = KEY_RAW_PRINT_SCREEN | (K_DO_NONE << 8),
	KEY_SCROLL_LOCK = KEY_RAW_SCROLL_LOCK | (K_DO_NONE << 8),
	KEY_PAUSE_BREAK = KEY_RAW_PAUSE_BREAK | (K_DO_NONE << 8),
	KEY_BACK_TICK = KEY_RAW_BACK_TICK | (K_DO_NONE << 8),
	KEY_1 = KEY_RAW_1 | (K_DO_SELF << 8),
	KEY_2 = KEY_RAW_2 | (K_DO_SELF << 8),
	KEY_3 = KEY_RAW_3 | (K_DO_SELF << 8),
	KEY_4 = KEY_RAW_4 | (K_DO_SELF << 8),
	KEY_5 = KEY_RAW_5 | (K_DO_SELF << 8),
	KEY_6 = KEY_RAW_6 | (K_DO_SELF << 8),
	KEY_7 = KEY_RAW_7 | (K_DO_SELF << 8),
	KEY_8 = KEY_RAW_8 | (K_DO_SELF << 8),
	KEY_9 = KEY_RAW_9 | (K_DO_SELF << 8),
	KEY_0 = KEY_RAW_0 | (K_DO_SELF << 8),
	KEY_MINUS = KEY_RAW_MINUS | (K_DO_SELF << 8),
	KEY_EQUALS = KEY_RAW_EQUALS | (K_DO_SELF << 8),
	KEY_BACKSPACE = KEY_RAW_BACKSPACE | (K_DO_SELF << 8),
	KEY_INSERT = KEY_RAW_INSERT | (K_DO_FN << 8),
	KEY_HOME = KEY_RAW_HOME | (K_DO_FN << 8),
	KEY_PAGE_UP = KEY_RAW_PAGE_UP | (K_DO_FN << 8),
	KEY_TAB = KEY_RAW_TAB | (K_DO_SELF << 8),
	KEY_Q = KEY_RAW_Q | (K_DO_SELF << 8),
	KEY_W = KEY_RAW_W | (K_DO_SELF << 8),
	KEY_E = KEY_RAW_E | (K_DO_SELF << 8),
	KEY_R = KEY_RAW_R | (K_DO_SELF << 8),
	KEY_T = KEY_RAW_T | (K_DO_SELF << 8),
	KEY_Y = KEY_RAW_Y | (K_DO_SELF << 8),
	KEY_U = KEY_RAW_U | (K_DO_SELF << 8),
	KEY_I = KEY_RAW_I | (K_DO_SELF << 8),
	KEY_O = KEY_RAW_O | (K_DO_SELF << 8),
	KEY_P = KEY_RAW_P | (K_DO_SELF << 8),
	KEY_LSQR_BRACKET = KEY_RAW_LSQR_BRACKET | (K_DO_SELF << 8),
	KEY_RSQR_BRACKET = KEY_RAW_RSQR_BRACKET | (K_DO_SELF << 8),
	KEY_BACKSLASH = KEY_RAW_BACKSLASH | (K_DO_FN << 8),
	KEY_DELETE = KEY_RAW_DELETE | (K_DO_FN << 8),
	KEY_END = KEY_RAW_END | (K_DO_FN << 8),
	KEY_PAGE_DOWN = KEY_RAW_PAGE_DOWN | (K_DO_FN << 8),
	KEY_CAPS_LOCK = KEY_RAW_CAPS_LOCK | (K_DO_MOD << 8),
	KEY_A = KEY_RAW_A | (K_DO_SELF << 8),
	KEY_S = KEY_RAW_S | (K_DO_SELF << 8),
	KEY_D = KEY_RAW_D | (K_DO_SELF << 8),
	KEY_F = KEY_RAW_F | (K_DO_SELF << 8),
	KEY_G = KEY_RAW_G | (K_DO_SELF << 8),
	KEY_H = KEY_RAW_H | (K_DO_SELF << 8),
	KEY_J = KEY_RAW_J | (K_DO_SELF << 8),
	KEY_K = KEY_RAW_K | (K_DO_SELF << 8),
	KEY_L = KEY_RAW_L | (K_DO_SELF << 8),
	KEY_SEMI_COLON = KEY_RAW_SEMI_COLON | (K_DO_SELF << 8),
	KEY_QUOTE = KEY_RAW_QUOTE | (K_DO_SELF << 8),
	KEY_ENTER = KEY_RAW_ENTER | (K_DO_SELF << 8),
	KEY_LSHIFT = KEY_RAW_LSHIFT | (K_DO_SELF << 8),
	KEY_Z = KEY_RAW_Z | (K_DO_SELF << 8),
	KEY_X = KEY_RAW_X | (K_DO_SELF << 8),
	KEY_C = KEY_RAW_C | (K_DO_SELF << 8),
	KEY_V = KEY_RAW_V | (K_DO_SELF << 8),
	KEY_B = KEY_RAW_B | (K_DO_SELF << 8),
	KEY_N = KEY_RAW_N | (K_DO_SELF << 8),
	KEY_M = KEY_RAW_M | (K_DO_SELF << 8),
	KEY_COMMA = KEY_RAW_COMMA | (K_DO_SELF << 8),
	KEY_DOT = KEY_RAW_DOT | (K_DO_SELF << 8),
	KEY_SLASH = KEY_RAW_SLASH | (K_DO_SELF << 8),
	KEY_RSHIFT = KEY_RAW_RSHIFT | (K_DO_MOD << 8),
	KEY_LCTRL = KEY_RAW_LCTRL | (K_DO_MOD << 8),
	KEY_LSUPER = KEY_RAW_LSUPER | (K_DO_NONE << 8),
	KEY_RSUPER = KEY_RAW_RSUPER | (K_DO_NONE << 8),
	KEY_LALT = KEY_RAW_LALT | (K_DO_MOD << 8),
	KEY_SPACE = KEY_RAW_SPACE | (K_DO_SELF << 8),
	KEY_RALT = KEY_RAW_RALT | (K_DO_MOD << 8),
	KEY_RCTRL = KEY_RAW_RCTRL | (K_DO_MOD << 8),
	KEY_ARROW_UP = KEY_RAW_ARROW_UP | (K_DO_FN << 8),
	KEY_ARROW_DOWN = KEY_RAW_ARROW_DOWN | (K_DO_FN << 8),
	KEY_ARROW_LEFT = KEY_RAW_ARROW_LEFT | (K_DO_FN << 8),
	KEY_ARROW_RIGHT = KEY_RAW_ARROW_RIGHT | (K_DO_FN << 8),
	KEY_NUM_LOCK = KEY_RAW_NUM_LOCK | (K_DO_MOD << 8),
	KEY_PAD_SLASH = KEY_RAW_PAD_SLASH | (K_DO_SELF << 8),
	KEY_PAD_STAR = KEY_RAW_PAD_STAR | (K_DO_SELF << 8),
	KEY_PAD_MINUS = KEY_RAW_PAD_MINUS | (K_DO_SELF << 8),
	KEY_PAD_7 = KEY_RAW_PAD_7 | (K_DO_SELF << 8),
	KEY_PAD_8 = KEY_RAW_PAD_8 | (K_DO_SELF << 8),
	KEY_PAD_9 = KEY_RAW_PAD_9 | (K_DO_SELF << 8),
	KEY_PAD_4 = KEY_RAW_PAD_4 | (K_DO_SELF << 8),
	KEY_PAD_5 = KEY_RAW_PAD_5 | (K_DO_SELF << 8),
	KEY_PAD_6 = KEY_RAW_PAD_6 | (K_DO_SELF << 8),
	KEY_PAD_1 = KEY_RAW_PAD_1 | (K_DO_SELF << 8),
	KEY_PAD_2 = KEY_RAW_PAD_2 | (K_DO_SELF << 8),
	KEY_PAD_3 = KEY_RAW_PAD_3 | (K_DO_SELF << 8),
	KEY_PAD_PLUS = KEY_RAW_PAD_PLUS | (K_DO_SELF << 8),
	KEY_PAD_ENTER = KEY_RAW_PAD_ENTER | (K_DO_SELF << 8),
	KEY_PAD_0 = KEY_RAW_PAD_0 | (K_DO_SELF << 8),
	KEY_PAD_DOT = KEY_RAW_PAD_DOT | (K_DO_SELF << 8),
	KEY_MM_PREVIOUS = KEY_RAW_MM_PREVIOUS | (K_DO_NONE << 8),
	KEY_MM_NEXT = KEY_RAW_MM_NEXT | (K_DO_NONE << 8),
	KEY_MM_MUTE = KEY_RAW_MM_MUTE | (K_DO_NONE << 8),
	KEY_MM_CALCULATOR = KEY_RAW_MM_CALCULATOR | (K_DO_NONE << 8),
	KEY_MM_PLAY = KEY_RAW_MM_PLAY | (K_DO_NONE << 8),
	KEY_MM_STOP = KEY_RAW_MM_STOP | (K_DO_NONE << 8),
	KEY_MM_DOWN = KEY_RAW_MM_DOWN | (K_DO_NONE << 8),
	KEY_MM_UP = KEY_RAW_MM_UP | (K_DO_NONE << 8),
	KEY_MM_WWW_HOME = KEY_RAW_MM_WWW_HOME | (K_DO_NONE << 8),
	KEY_APPS = KEY_RAW_APPS | (K_DO_NONE << 8),
	KEY_ACPI_POWER = KEY_RAW_ACPI_POWER | (K_DO_NONE << 8),
	KEY_ACPI_SLEEP = KEY_RAW_ACPI_SLEEP | (K_DO_NONE << 8),
	KEY_ACPI_WAKE = KEY_RAW_ACPI_WAKE | (K_DO_NONE << 8),
	KEY_MM_WWW_SEARCH = KEY_RAW_MM_WWW_SEARCH | (K_DO_NONE << 8),
	KEY_MM_WWW_FAVORITES = KEY_RAW_MM_WWW_FAVORITES | (K_DO_NONE << 8),
	KEY_MM_WWW_REFRESH = KEY_RAW_MM_WWW_REFRESH | (K_DO_NONE << 8),
	KEY_MM_WWW_STOP = KEY_RAW_MM_WWW_STOP | (K_DO_NONE << 8),
	KEY_MM_WWW_FORWARD = KEY_RAW_MM_WWW_FORWARD | (K_DO_NONE << 8),
	KEY_MM_WWW_BACK = KEY_RAW_MM_WWW_BACK | (K_DO_NONE << 8),
	KEY_MM_WWW_MY_COMP = KEY_RAW_MM_WWW_MY_COMP | (K_DO_NONE << 8),
	KEY_MM_WWW_EMAIL = KEY_RAW_MM_WWW_EMAIL | (K_DO_NONE << 8),
	KEY_MM_WWW_MEDIA_SEL = KEY_RAW_MM_WWW_MEDIA_SEL | (K_DO_NONE << 8),
};

#endif
